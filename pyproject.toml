[tool.poetry]
name = "ska-oso-oet"
version = "4.0.6"
description = "SKA Observation Execution Tool"
authors = ["Team Buttons"]
license = "BSD-3-Clause"
readme = "README.md"
repository = "https://github.com/ska-telescope/oso/ska-oso-oet"
documentation = "https://developer.skao.int/projects/ska-oso-oet/en/latest/index.html"
keywords = ["SKA OSO"]
packages = [
    { include = "ska_oso_oet", from = "src" }
]
include = [
    "src/ska_oso_oet/ska_oso_oet.ini",
    { path = 'tests' }
]
classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
]

[[tool.poetry.source]]
name = 'ska-nexus'
url = 'https://artefact.skao.int/repository/pypi-internal/simple'

[tool.poetry.dependencies]
python = "^3.10"
pytango = "=9.3.3"
Flask = "^2.2.2"
jsonpickle = "^2.2.0"
PyPubSub = "^4.0.3"
requests = "^2.28.1"
ska-ser-logging = "^0.4.1"
ska-ser-skuid = "^3.3.3"
tblib = "^1.7.0"
GitPython = "^3.1.27"
waitress = "^2.1.2"
ska-db-oda = "^1.3.0"

[tool.poetry.dev-dependencies]
black = "^22.8.0"
coverage = "^6.5.0"
flake8 = "^5.0.4"
isort = "^5.10.1"
mock = "^4.0.3"
pylint = "^2.15.3"
pylint-junit = "^0.3.2"
pytest = "^7.1.3"
pytest-bdd = "^6.0.1"
pytest-cov = "^4.0.0"
pytest-env = "^0.6.2"
pytest-json-report = "^1.5.0"
pytest-mock = "^3.9.0"
requests-mock = "^1.10.0"
ska-oso-oet-client = "^0.1.0"

[tool.poetry.extras]
docs = ["Sphinx", "docutils", "recommonmark", "sphinx-rtd-theme"]

[tool.poetry.scripts]
oet = "ska_oso_oet_client.restclient:main"

[tool.pytest.ini_options]
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s.%(msecs)03dZ|%(levelname)s|%(threadName)s|%(funcName)s|%(filename)s#%(lineno)d||%(message)s"
log_cli_date_format = "%Y-%m-%dT%H:%M:%S"
log_file = "pytest-logs.txt"
log_file_format = "%(asctime)s.%(msecs)03dZ|%(levelname)s|%(threadName)s|%(funcName)s|%(filename)s#%(lineno)d||%(message)s"
log_file_level = "DEBUG"
env = [
    "OET_REST_URI = http://ska-oso-oet-rest-test:5000/api/v1.0/procedures",
]

[tool.coverage.run]
parallel = true
branch = true
data_file = ".coverage/.coverage"

[tool.black]
line-length = 88
preview = true
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
profile = "black"
line_length = 88

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
