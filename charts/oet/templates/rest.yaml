{{ if .Values.rest.enabled }}
{{ if .Values.rest.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
    component: {{ .Values.rest.component }}
    function: {{ .Values.rest.function }}
    domain: {{ .Values.rest.domain }}
    intent: production
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/rule-type: PathPrefix
spec:
  rules:
    - host: {{ tpl .Values.ingress.hostname . }}
      http:
        paths:
        - path: /api
          backend:
           serviceName: {{ template "oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
           servicePort: 5000
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
    component: {{ .Values.rest.component }}
    function: {{ .Values.rest.function }}
    domain: {{ .Values.rest.domain }}
    intent: production
spec:
  ports:
  - name: oet-rest
    port: 5000
  clusterIP: None
  selector:
    app: {{ template "oet.name" . }}
    component: {{ .Values.rest.component }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}-scripts
  namespace: {{ .Release.Namespace }}
binaryData:
  hello_world.py: |-
{{ .Files.Get "data/hello_world.py" | b64enc | indent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
    component: {{ .Values.rest.component }}
    function: {{ .Values.rest.function }}
    domain: {{ .Values.rest.domain }}
    intent: production
spec:
  selector:
    matchLabels:
      app: {{ template "oet.name" . }}
      component: {{ .Values.rest.component }}
  serviceName: rest-{{ template "oet.name" . }}-{{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "oet.labels" . | indent 8 }}
        component: {{ .Values.rest.component }}
        function: {{ .Values.rest.function }}
        domain: {{ .Values.rest.domain }}
        intent: production
    spec:
      initContainers:
      - name: check-databaseds-ready
        image: "{{ .Values.rest.image.registry }}/{{ .Values.rest.image.image }}:{{ .Values.rest.image.tag }}"
        command:
          - /usr/local/bin/wait-for-it.sh
          - {{ if .Values.global.tango_host -}} {{ .Values.global.tango_host }} {{- else -}} databaseds-tango-base-{{ .Release.Name }}:10000 {{- end }}
          - --timeout=30
          - --strict
          - --
          - echo databaseds ready
      containers:
      - name: oet-rest
        image: "{{ .Values.rest.image.registry }}/{{ .Values.rest.image.image }}:{{ .Values.rest.image.tag }}"
        imagePullPolicy: {{ .Values.rest.image.pullPolicy }}
        command: ["python"]
        args: ["-m", "oet.procedure.application.main"]
        env:
          - name: TANGO_HOST
            value: {{ if .Values.global.tango_host -}} {{ .Values.global.tango_host }} {{- else -}} databaseds-tango-base-{{ .Release.Name }}:10000 {{- end }}
          - name: SKUID_URL
            value: "skuid-skuid-{{ .Release.Namespace }}-{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:9870"
        ports:
          - name: oet-rest
            containerPort: 5000
        volumeMounts:
          - name: oet-scripts-volume
            mountPath: /scripts
        resources:
{{ toYaml .Values.rest.resources | indent 10 }}
        readinessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: {{ .Values.rest.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.rest.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.rest.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.rest.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.rest.readinessProbe.failureThreshold }}
        livenessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: {{ .Values.rest.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.rest.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.rest.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.rest.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.rest.livenessProbe.failureThreshold }}
      volumes:
        - name: oet-scripts-volume
          configMap:
            name: {{ template "oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}-scripts
            items:
              - key: hello_world.py
                path: hello_world.py
  {{- with .Values.nodeSelector }}
nodeSelector:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.affinity }}
affinity:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.tolerations }}
tolerations:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{ end }}
