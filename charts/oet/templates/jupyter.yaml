{{ if .Values.jupyter.enabled }}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.jupyter.component }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
    component: {{ .Values.jupyter.component }}
    domain: self-configuration
    function: ingress-configuration
    intent: production
  annotations:
      kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: {{ tpl .Values.ingress.hostname . }}
      http:
        paths:
        - path: /jupyter
          backend:
           serviceName: {{ template "oet.name" . }}-{{ .Values.jupyter.component }}
           servicePort: 8888
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.jupyter.component }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
    component: {{ .Values.jupyter.component }}
    function: {{ .Values.jupyter.function }}
    domain: {{ .Values.jupyter.domain }}
    intent: production
spec:
  selector:
    app: {{ template "oet.name" . }}
    component: {{ .Values.jupyter.component }}
  ports:
    - protocol: TCP
      port: 8888
---
{{if .Values.jupyter.storage.enabled}}
{{ if .Values.minikube }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.jupyter.component }}-workspace-storage
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
    type: jupyter_storage
    component: {{ .Values.jupyter.component }}
    function: workspace-storage
    domain: storage
    intent: enabling
spec:
  storageClassName: jupyter
  capacity:
    storage: {{ .Values.jupyter.storage.capacity }}
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/jupyter-{{ .Release.Namespace }}-{{ .Release.Name }}/
{{ end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.jupyter.component }}-workspace-storage
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
    type: jupyter_storage
    function: workspace-storage
    domain: storage
    intent: production
spec:
{{ if .Values.minikube }}
  storageClassName: jupyter
  accessModes:
  - ReadWriteOnce
{{ else }}
  storageClassName: nfss1
  persistentVolumeReclaimPolicy: {{ .Values.jupyter.storage.reclaimPolicy}}
  accessModes:
  - ReadWriteMany
{{ end }}
  resources:
    requests:
      storage: {{ .Values.jupyter.storage.capacity }}
{{end}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.jupyter.component }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
    component: {{ .Values.jupyter.component }}
    domain: self-configuration
    function: jupyter-configuration
    intent: production
data:
  environment: |
    TANGO_HOST={{ if .Values.global.tango_host -}} {{ .Values.global.tango_host }} {{- else -}} databaseds-tango-base-{{ .Release.Name }}:10000 {{- end }}
  venv.sh: |
    export PATH="/venv/bin:${PATH}"
    export OET_REST_URI=http://{{ template "oet.name" . }}-rest:5000/api/v1.0/procedures
  jupyter_notebook_config.json: |-
    {
        "NotebookApp": {
          "password": "sha1:a83c43c88b88:980ac02521dcf9f62f610e26b051f157c05a36fe",
          "base_url": "/jupyter/"
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.jupyter.component }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
    component: {{ .Values.jupyter.component }}
    function: {{ .Values.jupyter.function }}
    domain: {{ .Values.jupyter.domain }}
    intent: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "oet.name" . }}
      component: {{ .Values.jupyter.component }}
  template:
    metadata:
      labels:
        {{- include "oet.labels" . | indent 8 }}
        component: {{ .Values.jupyter.component }}
        function: {{ .Values.jupyter.function }}
        domain: {{ .Values.jupyter.domain }}
        intent: production
    spec:
      volumes:
        - name: configuration
          configMap:
            name: {{ template "oet.name" . }}-{{ .Values.jupyter.component }}
            items:
            - key: environment
              path: environment
            - key: venv.sh
              path: venv.sh
            - key: jupyter_notebook_config.json
              path: jupyter_notebook_config.json
        {{- if .Values.jupyter.storage.enabled }}
        - name: workspace-storage
          persistentVolumeClaim:
            claimName: {{ template "oet.name" . }}-{{ .Values.jupyter.component }}-workspace-storage
        {{- end }}
        - name: workdir
          emptyDir: {}
      initContainers:
      - name: check-databaseds-ready
        image: "{{ .Values.jupyter.image.registry }}/{{ .Values.jupyter.image.image }}:{{ .Values.jupyter.image.tag }}"
        command:
          - /usr/local/bin/wait-for-it.sh
          - "{{ if .Values.global.tango_host -}} {{ .Values.global.tango_host }} {{- else -}} databaseds-tango-base-{{ .Release.Name }}:10000 {{- end }}"
          - --timeout=30
          - --strict
          - --
          - echo databaseds ready
      containers:
      - name: oet-jupyter
        image: "{{ .Values.jupyter.image.registry }}/{{ .Values.jupyter.image.image }}:{{ .Values.jupyter.image.tag }}"
        imagePullPolicy: {{ .Values.jupyter.image.pullPolicy }}
        ports:
          - name: oet-jupyter
            containerPort: 8888
        env:
          - name: TANGO_HOST
            value: {{ if .Values.global.tango_host -}} {{ .Values.global.tango_host }} {{- else -}} databaseds-tango-base-{{ .Release.Name }}:10000 {{- end }}
          - name: SHELL
            value: /bin/bash
          - name: OET_REST_URI
            value: http://{{ template "oet.name" . }}-rest:5000/api/v1.0/procedures
          - name: SKUID_URL
            value: "skuid-skuid-{{ .Release.Namespace }}-{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:9870"
        volumeMounts:
          {{- if .Values.jupyter.storage.enabled }}
          - name: workspace-storage
            mountPath: /app/jupyter_storage
          {{- end }}
          - name: workdir
            mountPath: /home/tango/.jupyter
          - name: configuration
            mountPath: /etc/environment
            subPath: environment
          - name: configuration
            mountPath: /etc/profile.d/venv.sh
            subPath: venv.sh
          - name: configuration
            mountPath: /home/tango/.jupyter/jupyter_notebook_config.json
            subPath: jupyter_notebook_config.json
        readinessProbe:
          tcpSocket:
            port: 8888
          initialDelaySeconds: {{ .Values.jupyter.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.jupyter.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.jupyter.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.jupyter.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.jupyter.readinessProbe.failureThreshold }}
        livenessProbe:
          tcpSocket:
            port: 8888
          initialDelaySeconds: {{ .Values.jupyter.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.jupyter.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.jupyter.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.jupyter.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.jupyter.livenessProbe.failureThreshold }}
      restartPolicy: Always
      resources:
  {{ toYaml .Values.rest.resources | indent 10 }}
  {{- with .Values.nodeSelector }}
nodeSelector:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.affinity }}
affinity:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.tolerations }}
tolerations:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{ end }}
