{{ if .Values.itango.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.itango.component }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
    component: {{ .Values.itango.component }}
    function: {{ .Values.itango.function }}
    domain: {{ .Values.itango.domain }}
    intent: production
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 22
      nodePort: {{ .Values.itango.nodePort }}
  selector:
    app: {{ template "oet.name" . }}
    component: {{ .Values.itango.component }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: itango-configmap-{{ template "oet.name" .}}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
data:
  environment: |
    TANGO_HOST={{ if .Values.global.tango_host -}} {{ .Values.global.tango_host }} {{- else -}} databaseds-tango-base-{{ .Release.Name }}:10000 {{- end }}
    PATH=/venv/bin:$PATH
  profile: |
    cd /app
    /venv/bin/itango3 --profile=ska
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "oet.name" . }}-{{ .Values.itango.component }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oet.labels" . | indent 4 }}
    component: {{ .Values.itango.component }}
    function: {{ .Values.itango.function }}
    domain: {{ .Values.itango.domain }}
    intent: production
spec:
  selector:
    matchLabels:
      app: {{ template "oet.name" . }}
      component: {{ .Values.itango.component }}
  serviceName: {{ template "oet.name" . }}-{{ .Values.itango.component }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "oet.labels" . | indent 8 }}
        component: {{ .Values.itango.component }}
        function: {{ .Values.itango.function }}
        domain: {{ .Values.itango.domain }}
        intent: production
    spec:
      restartPolicy: Always
      initContainers:
      - name: check-databaseds-ready
        image: "{{ .Values.rest.image.registry }}/{{ .Values.rest.image.image }}:{{ .Values.rest.image.tag }}"
        command:
          - /usr/local/bin/wait-for-it.sh
          - {{ if .Values.global.tango_host -}} {{ .Values.global.tango_host }} {{- else -}} databaseds-tango-base-{{ .Release.Name }}:10000 {{- end }}
          - --timeout=30
          - --strict
          - --
          - echo databaseds ready
      containers:
      - name: oet-itango
        image: "{{ .Values.itango.image.registry }}/{{ .Values.itango.image.image }}:{{ .Values.itango.image.tag }}"
        imagePullPolicy: {{ .Values.itango.image.pullPolicy }}
        ports:
          - name: oet-itango
            containerPort: 22
        volumeMounts:
          - name: itango-configmap-volume
            mountPath: /home/tango/.profile
            subPath: .profile
          - name: itango-configmap-volume
            mountPath: /etc/environment
            subPath: environment
        readinessProbe:
          tcpSocket:
            port: 22
          initialDelaySeconds: {{ .Values.itango.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.itango.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.itango.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.itango.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.itango.readinessProbe.failureThreshold }}
        livenessProbe:
          tcpSocket:
            port: 22
          initialDelaySeconds: {{ .Values.itango.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.itango.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.itango.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.itango.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.itango.livenessProbe.failureThreshold }}
      volumes:
        - name: itango-configmap-volume
          configMap:
            name: itango-configmap-{{ template "oet.name" .}}-{{ .Release.Name }}
            items:
            - key: profile
              path: .profile
            - key: environment
              path: environment
      resources:
  {{ toYaml .Values.itango.resources | indent 10 }}
  {{- with .Values.nodeSelector }}
nodeSelector:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.affinity }}
affinity:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.tolerations }}
tolerations:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{ end }}
