{{ if .Values.rest.enabled }}
{{ if .Values.rest.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "ska-oso-oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ska-oso-oet.labels" . | indent 4 }}
    component: {{ .Values.rest.component }}
    function: {{ .Values.rest.function }}
    domain: {{ .Values.rest.domain }}
    intent: production
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - http:
        paths:
          - path: /{{ .Release.Namespace }}/ska-oso-oet/(api.*)
            pathType: Prefix
            backend:
              service:
                name: {{ template "ska-oso-oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
                port:
                  number: 5000
          - path: /({{ .Release.Namespace }}/ska-oso-oet/openapi/.*)
            pathType: Prefix
            backend:
              service:
                name: {{ template "ska-oso-oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
                port:
                  number: 5000
          - path: /({{ .Release.Namespace }}/ska-oso-oet/ui/.*)
            pathType: Prefix
            backend:
              service:
                name: {{ template "ska-oso-oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
                port:
                  number: 5000
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "ska-oso-oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ska-oso-oet.labels" . | indent 4 }}
    component: {{ .Values.rest.component }}
    function: {{ .Values.rest.function }}
    domain: {{ .Values.rest.domain }}
    intent: production
spec:
  ports:
  - name: oet-backend
    port: 5000
  clusterIP: None
  selector:
    app: {{ template "ska-oso-oet.name" . }}
    component: {{ .Values.rest.component }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "ska-oso-oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}-scripts
  namespace: {{ .Release.Namespace }}
binaryData:
  hello_world.py: |-
{{ .Files.Get "data/hello_world.py" | b64enc | indent 4 }}
  hello_world_sb.py: |-
{{ .Files.Get "data/hello_world_sb.py" | b64enc | indent 4 }}
  low_sb_example.json: |-
{{ .Files.Get "data/low_sb_example.json" | b64enc | indent 4 }}
  mid_sb_example.json: |-
{{ .Files.Get "data/mid_sb_example.json" | b64enc | indent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "ska-oso-oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ska-oso-oet.labels" . | indent 4 }}
    component: {{ .Values.rest.component }}
    function: {{ .Values.rest.function }}
    domain: {{ .Values.rest.domain }}
    intent: production
spec:
  selector:
    matchLabels:
      app: {{ template "ska-oso-oet.name" . }}
      component: {{ .Values.rest.component }}
  serviceName: rest-{{ template "ska-oso-oet.name" . }}-{{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "ska-oso-oet.labels" . | indent 8 }}
        component: {{ .Values.rest.component }}
        function: {{ .Values.rest.function }}
        domain: {{ .Values.rest.domain }}
        intent: production
    spec:
      containers:
      - name: ska-oso-oet-rest
        image: "{{ .Values.rest.image.registry }}/{{ .Values.rest.image.image }}:{{ .Values.rest.image.tag }}"
        imagePullPolicy: {{ .Values.rest.image.pullPolicy }}
        command: ["/bin/sh"]
#        The OpenAPI specs define the server url with the default namespace, ska-oso-oet. We want to overwrite this to the actual namespace at runtime, for example in the CICD deployments.
        args: [ "-c", 'sed -i "s|ska-oso-oet/ska-oso-oet|$KUBE_NAMESPACE/ska-oso-oet|g" /app/src/ska_oso_oet/openapi/oet-openapi-v1.yaml && python -m ska_oso_oet.main' ]
        envFrom:
          - configMapRef:
              name: {{ template "ska-oso-oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}-environment
        ports:
          - name: oet-backend
            containerPort: 5000
        volumeMounts:
          - name: ska-oso-oet-scripts-volume
            mountPath: /tmp/oda
        resources:
{{ toYaml .Values.rest.resources | indent 10 }}
        readinessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: {{ .Values.rest.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.rest.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.rest.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.rest.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.rest.readinessProbe.failureThreshold }}
        livenessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: {{ .Values.rest.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.rest.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.rest.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.rest.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.rest.livenessProbe.failureThreshold }}
      initContainers:
      - name: copy
        image: "{{ .Values.rest.image.registry }}/{{ .Values.rest.image.image }}:{{ .Values.rest.image.tag }}"
        command: ["bash", "-c", "cp /tmp-data/* /tmp/oda/"]
        volumeMounts:
        - mountPath: /tmp-data
          name: temp-ska-oso-oet-scripts-volume
        - mountPath: /tmp/oda
          name: ska-oso-oet-scripts-volume
      volumes:
        - name: ska-oso-oet-scripts-volume
          emptyDir: {}
        - name: temp-ska-oso-oet-scripts-volume
          configMap:
            name: {{ template "ska-oso-oet.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}-scripts
            items:
              - key: hello_world.py
                path: hello_world.py
              - key: hello_world_sb.py
                path: hello_world_sb.py
              - key: low_sb_example.json
                path: low_sb_example.json
              - key: mid_sb_example.json
                path: mid_sb_example.json
  {{- with .Values.nodeSelector }}
nodeSelector:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.affinity }}
affinity:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.tolerations }}
tolerations:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{ end }}
