# GitLab CI in conjunction with GitLab Runner can use Docker Engine to test and build any application.
# Docker, when used with GitLab CI, runs each job in a separate and isolated container using the predefined image that is set up in .gitlab-ci.yml.
# In this case we use the latest python docker image to build and test this project.
image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

default:
  tags:
    - k8srunner

# Standardised included jobs
variables:
  CHARTS_TO_PUBLISH: ska-oso-oet
  GIT_SUBMODULE_STRATEGY: recursive

# The YAML file defines a set of jobs with constraints stating when they should be run.
# You can specify an unlimited number of jobs which are defined as top-level elements with an arbitrary name and always have to contain at least the script clause.
# In this case we have only the test job which produce an artifacts (it must be placed into a directory called "public")
# It is also specified that only the master branch will be subject of this job.

stages:
  - build
  - test
  - cleanup
  - lint
  - publish
  - pages
  - scan

test-chart-templates:
  stage: test
  variables:
    MINIKUBE: "false"
  tags:
  - k8srunner
  image: $SKA_K8S_TOOLS_DEPLOY_IMAGE
  script:
    - helm plugin install https://github.com/helm-unittest/helm-unittest.git
    - make k8s-chart-test
    - mkdir -p ./build/reports
    - mv charts/build/chart_template_tests.xml ./build/reports/chart_template_tests.xml
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/reports/chart_template_tests.xml


include:
  # Python
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/python.gitlab-ci.yml"
  # OCI
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/oci-image.gitlab-ci.yml"
  # Helm Chart linting and Publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'
  # k8s steps
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/k8s.gitlab-ci.yml'
  # Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs-pages.gitlab-ci.yml'
  # .post step finalisers eg: badges
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/finaliser.gitlab-ci.yml"
    ref: st-1441-switch-to-gitlab-dependency-scan
  # Tag Based GitLab Release Management
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml'
  # change log and release notes
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/changelog.gitlab-ci.yml"